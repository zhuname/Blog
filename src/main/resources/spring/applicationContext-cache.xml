<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/redis
		http://www.springframework.org/schema/redis/spring-redis.xsd"
	default-lazy-init="false">


	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效,redis的实现是 redisCacheManager -->
	<!-- <cache:annotation-driven cache-manager="cacheManager" /> -->
	<cache:annotation-driven cache-manager="redisCacheManager" />

	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<!-- <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="springraincache" />
				</bean>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="springrainqxcache" />
				</bean>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="statichtmlcache" />
				</bean>
				
			</set>
		</property>
	</bean> -->
	
	

<!--  redisCacheManager 用于spring 缓存, redisCached 为redis的工具类,用于业务的缓存. 基于redis分布的session共享也是基于这个redisCached -->

 
 
<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
      <constructor-arg ref="redisTemplate" />
       <property name="defaultExpiration" value="1800" />
</bean>
	

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="redisCached" class="com.cz.mts.frame.cached.RedisCachedImpl">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="expire" value="1800" />
	</bean>

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
	</bean>
	


<!-- 消息队列   生产者和消费者模式 -->


	<bean id="sendMessage" class="com.cz.mts.frame.queue.SendMessage">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean> 
    
	<bean id="jdkSerializationRedisSerializer"
        class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        
    <bean id="redisMessageDelegateListener" class="com.cz.mts.frame.queue.RedisMessageDelegateListener"/>
	
	<bean id="redisMessageListener"
        class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="redisMessageDelegateListener" />
        <property name="serializer" ref="jdkSerializationRedisSerializer" />
    </bean>
    
    
    <redis:listener-container>
        <redis:listener ref="redisMessageListener" method="handleMessage" serializer="jdkSerializationRedisSerializer" topic="springrainqueue" />
    </redis:listener-container>

	
</beans>